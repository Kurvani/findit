{"version":3,"sources":["index.js"],"names":["searchForm","document","getElementById","searchInput","addEventListener","e","searchTerm","value","sortBy","querySelector","searchLimit","showMessage","preventDefault","message","className","div","createElement","appendChild","createTextNode","searchContainer","search","insertBefore","setTimeout","remove"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAnB;AACA,IAAMC,WAAW,GAAGF,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAApB,EAEA;AACA;AAEA;;AACAF,UAAU,CAACI,gBAAX,CAA4B,QAA5B,EAAsC,UAAAC,CAAC,EAAI;AACzC;AACA,MAAMC,UAAU,GAAGH,WAAW,CAACI,KAA/B,CAFyC,CAIzC;AACA;;AACA,MAAMC,MAAM,GAAGP,QAAQ,CAACQ,aAAT,CAAuB,8BAAvB,EAAuDF,KAAtE,CANyC,CAQzC;;AACA,MAAMG,WAAW,GAAGT,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCK,KAArD,CATyC,CAWzC;;AACA,MAAID,UAAU,IAAI,EAAlB,EAAsB;AACpB;AACAK,IAAAA,WAAW,CAAC,0BAAD,EAA6B,cAA7B,CAAX;AACD,GAfwC,CAiBzC;;;AACAN,EAAAA,CAAC,CAACO,cAAF;AACD,CAnBD,GAqBA;;AACA,SAASD,WAAT,CAAqBE,OAArB,EAA8BC,SAA9B,EAAyC;AACvC;AACA,MAAMC,GAAG,GAAGd,QAAQ,CAACe,aAAT,CAAuB,KAAvB,CAAZ,CAFuC,CAIvC;;AACAD,EAAAA,GAAG,CAACD,SAAJ,mBAAyBA,SAAzB,EALuC,CAKD;AAEtC;AACA;;AACAC,EAAAA,GAAG,CAACE,WAAJ,CAAgBhB,QAAQ,CAACiB,cAAT,CAAwBL,OAAxB,CAAhB,EATuC,CAWvC;AACA;;AACA,MAAMM,eAAe,GAAGlB,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAxB,CAbuC,CAcvC;;AACA,MAAMkB,MAAM,GAAGnB,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf,CAfuC,CAiBvC;AACA;;AACAiB,EAAAA,eAAe,CAACE,YAAhB,CAA6BN,GAA7B,EAAkCK,MAAlC,EAnBuC,CAqBvC;AACA;AACA;AACA;;AACAE,EAAAA,UAAU,CAAC;AAAA,WAAMrB,QAAQ,CAACQ,aAAT,CAAuB,QAAvB,EAAiCc,MAAjC,EAAN;AAAA,GAAD,EAAkD,IAAlD,CAAV;AACD","file":"findit.e31bb0bc.map","sourceRoot":"..","sourcesContent":["const searchForm = document.getElementById(\"search-form\");\r\nconst searchInput = document.getElementById(\"search-input\");\r\n\r\n//Grab the searchForm variable and add on an EventListener\r\n//When you have an EventListener you can pass in an event parameter as well (which we use 'e')\r\n\r\n// Form Event Listener\r\nsearchForm.addEventListener(\"submit\", e => {\r\n  // Get search term (we grab this from our searchInput variable and grab the value stored in it)\r\n  const searchTerm = searchInput.value;\r\n\r\n  // Get sort\r\n  // We can use any kind of selector so we do any input with the name of \"sortby\" but we want the one that's checked so we use ':checked'\r\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n\r\n  //Get limit\r\n  const searchLimit = document.getElementById(\"limit\").value;\r\n\r\n  // Check input to make sure we don't have an empty form\r\n  if (searchTerm == \"\") {\r\n    //Show message there is nothing typed in\r\n    showMessage(\"Please add a search term\", \"alert-danger\");\r\n  }\r\n\r\n  //preventDefault to prevent the form from actaully submitting to a file\r\n  e.preventDefault();\r\n});\r\n\r\n// Show Message\r\nfunction showMessage(message, className) {\r\n  // Create the div\r\n  const div = document.createElement(\"div\");\r\n\r\n  // Add our classes to that div we just created\r\n  div.className = `alert ${className}`; //We're using backticks because we're going to use a variable; which is a template string which is part of ES6. Now with bootstrap your class should be alert and then whatever the color you want or the type\r\n\r\n  // Add text\r\n  // appendChild() means to put something inside of it. In this case put something inside our div\r\n  div.appendChild(document.createTextNode(message));\r\n\r\n  //Now to get it into the DOM so it displays\r\n  //Get parent\r\n  const searchContainer = document.getElementById(\"search-container\");\r\n  // Get search\r\n  const search = document.getElementById(\"search\");\r\n\r\n  // Insert message\r\n  //so we take the container and we want to insert the 'div' before the 'search' element\r\n  searchContainer.insertBefore(div, search);\r\n\r\n  // Timeout to get rid of alert message after a while\r\n  //We can use an arrow instead of a function TODO: need more details on Arrow Functions\r\n  //Since we are grabing a class we use querySelector().\r\n  //setTimeout takes two parameters, what we're doing and then the time to remove, which is in milliseconds\r\n  setTimeout(() => document.querySelector(\".alert\").remove(), 3000);\r\n}\r\n"]}